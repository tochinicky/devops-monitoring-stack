[all:vars]
# Global variables that apply to all hosts
ansible_user=ubuntu
ansible_ssh_private_key_file=~/.ssh/id_rsa
ansible_python_interpreter=/usr/bin/python3

#==============================================
# MONITORING SERVERS
#==============================================
[monitoring_servers]
# Define your monitoring server(s) here
# Format: hostname ansible_host=IP_ADDRESS ansible_hostname=HOSTNAME
monitor.example.com ansible_host=192.168.1.10 ansible_hostname=monitor.example.com

[monitoring_servers:vars]
# Variables specific to monitoring servers
monitoring_domain=monitor.example.com
alertmanager_domain=alerts.example.com
grafana_domain=grafana.example.com

# Prometheus configuration
prometheus_version=2.40.7
prometheus_storage_retention_time=15d
prometheus_storage_retention_size=200GB
prometheus_web_external_url=https://{{ monitoring_domain }}
prometheus_web_route_prefix=/

# Alertmanager configuration
alertmanager_version=0.25.0
alertmanager_web_external_url=https://{{ alertmanager_domain }}
alertmanager_web_route_prefix=/

# Node exporter configuration
node_exporter_version=1.5.0
node_exporter_enabled_collectors=["systemd","processes","filesystem","meminfo","cpu"]

# Blackbox exporter configuration
blackbox_exporter_version=0.23.0
blackbox_exporter_web_listen_address=127.0.0.1:9115

# Grafana configuration
grafana_version=9.3.6
grafana_admin_password=StrongPassword123  # Change this!
grafana_admin_user=admin
grafana_domain={{ grafana_domain }}
grafana_serve_from_sub_path=false

#==============================================
# EFK STACK CONFIGURATION
#==============================================
[efk_servers]
# You can use the same server as your monitoring server or define a dedicated server
monitor.example.com ansible_host=192.168.1.10 ansible_hostname=monitor.example.com

[efk_servers:vars]
# Elasticsearch configuration
elasticsearch_version=7.17.9
elasticsearch_cluster_name=monitoring-logs
elasticsearch_heap_size=2g  # Adjust based on server memory
elasticsearch_data_dir=/var/lib/elasticsearch
elasticsearch_log_dir=/var/log/elasticsearch
elasticsearch_network_host=127.0.0.1
elasticsearch_http_port=9200
# Security settings - enable if using X-Pack security
elasticsearch_security_enabled=false
elasticsearch_user=elastic
elasticsearch_password=ChangeMe123!  # Change this!

# Fluentd (td-agent) configuration
fluentd_version=4.3.2
fluentd_user=td-agent
fluentd_group=td-agent
# Fluentd performance tuning
fluentd_buffer_chunk_limit=8m
fluentd_buffer_queue_limit=256
fluentd_flush_interval=5s
# Log forwarding
fluentd_forward_to_elasticsearch=true
fluentd_elasticsearch_host=localhost
fluentd_elasticsearch_port=9200
# Log sources to collect
fluentd_collect_system_logs=true
fluentd_collect_audit_logs=true
fluentd_collect_prometheus_logs=true
fluentd_collect_alertmanager_logs=true
fluentd_collect_nginx_logs=true
fluentd_collect_grafana_logs=true

# Kibana configuration
kibana_version=7.17.9
kibana_server_port=5601
kibana_server_host=127.0.0.1
kibana_server_name=logs.example.com
kibana_elasticsearch_hosts=["http://localhost:9200"]
# Security settings
kibana_security_enabled=false
kibana_elasticsearch_username={{ elasticsearch_user }}
kibana_elasticsearch_password={{ elasticsearch_password }}

# Nginx proxy configuration for Kibana
kibana_nginx_enabled=true
kibana_access_log=/var/log/nginx/kibana-access.log
kibana_error_log=/var/log/nginx/kibana-error.log
kibana_auth_enabled=true  # Enable basic authentication for Kibana
kibana_auth_user=kibadmin
kibana_auth_pass=KibanaSecurePass!  # Change this!

# SSL configuration for all components
ssl_enabled=true
ssl_certificate=/etc/letsencrypt/live/{{ monitoring_domain }}/fullchain.pem
ssl_certificate_key=/etc/letsencrypt/live/{{ monitoring_domain }}/privkey.pem
ssl_protocols="TLSv1.2 TLSv1.3"
ssl_ciphers="HIGH:!aNULL:!MD5"

#==============================================
# MONITORED SERVERS
#==============================================
[app_servers]
# Define servers to be monitored here
app1.example.com ansible_host=192.168.1.101 ansible_hostname=app1.example.com
app2.example.com ansible_host=192.168.1.102 ansible_hostname=app2.example.com

[db_servers]
# Database servers to monitor
db1.example.com ansible_host=192.168.1.201 ansible_hostname=db1.example.com

[web_servers]
# Web servers to monitor
web1.example.com ansible_host=192.168.1.151 ansible_hostname=web1.example.com
web2.example.com ansible_host=192.168.1.152 ansible_hostname=web2.example.com

[monitored_servers:children]
app_servers
db_servers
web_servers

[monitored_servers:vars]
# Variables for servers being monitored
node_exporter_enabled=true
node_exporter_version=1.5.0
node_exporter_web_listen_address=0.0.0.0:9100

# Fluentd agent configuration for log forwarding
fluentd_agent_enabled=true
fluentd_agent_version=4.3.2
fluentd_central_server=monitor.example.com
fluentd_central_port=24224

[monitoring_servers]
<SERVER_IP> ansible_user=<SERVER_USERNAME> ansible_password=<SERVER_PASSWORD> ansible_hostname=<SERVER_HOSTNAME>

[monitoring_servers:vars]
ansible_connection=ssh
ansible_port=22