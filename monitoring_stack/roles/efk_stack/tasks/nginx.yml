---
# Install and configure Nginx for Kibana
- name: Ensure nginx is installed
  package:
    name: nginx
    state: present

- name: Create Kibana Nginx configuration
  template:
    src: kibana.nginx.conf.j2
    dest: "{{ nginx_vhost_dir | default('/etc/nginx/conf.d') }}/kibana.conf"
    owner: root
    group: root
    mode: 0644
  notify: reload nginx

- name: Check if SSL certs exist
  stat:
    path: "{{ kibana_ssl_cert_file | default('/etc/ssl/certs/kibana.crt') }}"
  register: ssl_cert_exists
  when: kibana_enable_ssl | default(false)

- name: Check if SSL key exists
  stat:
    path: "{{ kibana_ssl_key_file | default('/etc/ssl/private/kibana.key') }}"
  register: ssl_key_exists
  when: kibana_enable_ssl | default(false)

- name: Create self-signed SSL certificate for Kibana
  command: >
    openssl req -x509 -nodes -days 3650 -newkey rsa:2048
    -keyout {{ kibana_ssl_key_file | default('/etc/ssl/private/kibana.key') }}
    -out {{ kibana_ssl_cert_file | default('/etc/ssl/certs/kibana.crt') }}
    -subj "/C=US/ST=State/L=City/O=Organization/CN={{ kibana_server_name | default('kibana.example.com') }}"
  when: 
    - kibana_enable_ssl | default(false)
    - not ssl_cert_exists.stat.exists or not ssl_key_exists.stat.exists

- name: Ensure SSL key permissions are secure
  file:
    path: "{{ kibana_ssl_key_file | default('/etc/ssl/private/kibana.key') }}"
    owner: root
    group: "{{ nginx_user | default('www-data') }}"
    mode: 0640
  when: kibana_enable_ssl | default(false)

- name: Create htpasswd file for basic authentication
  htpasswd:
    path: "{{ kibana_htpasswd_file | default('/etc/nginx/.htpasswd-kibana') }}"
    name: "{{ kibana_basic_auth_username | default('kibana') }}"
    password: "{{ kibana_basic_auth_password | default('changeme') }}"
    owner: root
    group: "{{ nginx_user | default('www-data') }}"
    mode: 0640
  when: kibana_enable_basic_auth | default(false)

- name: Enable Nginx service
  systemd:
    name: nginx
    enabled: yes
    state: started

