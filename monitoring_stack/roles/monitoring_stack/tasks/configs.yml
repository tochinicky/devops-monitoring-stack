---
- name: Deploy Prometheus configuration
  ansible.builtin.template:
    src: prometheus.yml.j2
    dest: /etc/prometheus/prometheus.yml
    owner: prometheus
    group: prometheus
  notify: Restart Prometheus

- name: Deploy Alertmanager configuration
  ansible.builtin.copy:
    src: files/alertmanager.yml
    dest: /etc/alertmanager/alertmanager.yml
    owner: alertmanager
    group: alertmanager
    mode: 0640
  notify: Restart Alertmanager

- name: Update Slack webhook URL
  ansible.builtin.replace:
    path: /etc/alertmanager/alertmanager.yml
    regexp: '\{\{ slack_webhook_url \}\}'
    replace: "{{ slack_webhook_url }}"

- name: Deploy Blackbox configuration
  ansible.builtin.template:
    src: blackbox.yml.j2
    dest: /etc/blackbox_exporter/blackbox.yml
    owner: blackbox
    group: blackbox
  notify: Restart Blackbox Exporter

- name: Deploy alert rules
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/etc/prometheus/rules/{{ item }}"
    owner: prometheus
    group: prometheus
  loop:
    - node_exporter_alerts.yml
    - blackbox_alerts.yml
    - dora_alerts.yml
  notify: Restart Prometheus

# Install certbot and nginx plugin
- name: Install certbot and nginx plugin
  become: true
  apt:
    name:
      - certbot
      - python3-certbot-nginx
    state: present
    update_cache: true

# Stop nginx temporarily for standalone mode
- name: Stop nginx
  become: true
  service:
    name: nginx
    state: stopped

# Obtain SSL certificates using standalone mode
- name: Obtain SSL certificates
  become: true
  command: >
    certbot certonly --standalone
    -d devopshng.online
    -d prometheus.devopshng.online 
    -d grafana.devopshng.online 
    -d alerts.devopshng.online 
    -d dora.devopshng.online 
    --non-interactive 
    --agree-tos 
    --email {{ admin_email }}
  args:
    creates: /etc/letsencrypt/live/devopshng.online

# Generate SSL DH parameters
- name: Generate SSL DH parameters
  become: true
  command: openssl dhparam -out /etc/letsencrypt/ssl-dhparams.pem 2048
  args:
    creates: /etc/letsencrypt/ssl-dhparams.pem

# Copy Nginx configuration for monitoring stack
- name: Copy Nginx configuration for monitoring stack
  become: true
  copy:
    src: nginx-monitoring.conf
    dest: /etc/nginx/sites-available/monitoring

# Enable monitoring site
- name: Enable monitoring site
  become: true
  file:
    src: /etc/nginx/sites-available/monitoring
    dest: /etc/nginx/sites-enabled/monitoring
    state: link

# Remove default Nginx site
- name: Remove default Nginx site
  become: true
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

# Copy Nginx configuration for Node.js app
- name: Copy Nginx configuration for Node.js app
  become: true
  copy:
    src: nginx-app.conf
    dest: /etc/nginx/sites-available/app

# Enable Node.js app site
- name: Enable Node.js app site
  become: true
  file:
    src: /etc/nginx/sites-available/app
    dest: /etc/nginx/sites-enabled/app
    state: link

# Test Nginx configuration
- name: Test Nginx configuration
  become: true
  command: nginx -t
  register: nginx_test

# Start nginx if configuration test passes
- name: Start nginx
  become: true
  service:
    name: nginx
    state: started
  when: nginx_test.rc == 0

# Set up automatic renewal
- name: Add certbot renewal cron job
  become: true
  cron:
    name: "Certbot renewal"
    job: "certbot renew --quiet --post-hook 'systemctl reload nginx'"
    minute: "0"
    hour: "12"
    weekday: "1"
